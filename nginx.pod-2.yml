apiVersion: v1        # kubectl API version
kind: Pod             # Type of kubernetes resource
metadata :            # Metadata about the Pos
  name: my-nginx
  labels:              # Labels for the Pod
    app: nginx
    rel: stable
spec:                 # The spec / blueprint of the Pod
  containers:         # Information about the containers that will run in the Pod
    - name: my-nginx
      image: nginx:alpine
     livenessProbe:  # Information about the liveness probe
        httpGet:       # HTTP GET request
          path: /index.html
          port: 80
        initialDelaySeconds:  30
        timeoutSeconds:      2
        periodSeconds:       5
        failureThreshold:    1
    readinessProbe:   # Information about the readiness probe
      httpGet:         # HTTP GET request
        path: /index.html
        port: 80
      ports:
        - containerPort: 80

# kubectl create -f nginx.pod-2.yml --save-config
# kubectl create -f sample/pods/nginx.pod-2.yml --save-config
# kubectl get pods
# kubectl get my-nginx  -o yaml
# kubectl describe pod [pod-name]
# kubectl describe pod my-nginx
# kubectl apply -f nginx.pod-2.yml  //create pod (resource) or make changes to existing pod
# kubectl apply -f sample/pods/nginx.pod-2.yml
# kubectl get pod
# kubectl exec [pod-name] -it sh  # Inside the container
# kubectl exec my-nginx  -it sh
   # cd usr
   #usr # ls
   #usr # cd share/nginx/html
# kubectl edit  -f sample/pods/nginx.pod-2.yml
# kubectl delete  -f sample/pods/nginx.pod-2.yml
# kubectl pods
# kubectl get all